# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be:

    # 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28

# Let us list the factors of the first sevent triangle numbers:

    # 1 : 1
    # 3 : 1, 3
    # 6 : 1, 2, 3, 6
    # 10 : 1, 2, 5, 10
    # 15 : 1, 3, 5, 15
    # 21 : 1, 3, 7, 21
    # 28 : 1, 2, 4, 7, 14, 28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?



########################################
### HIGHLY DIVISIBLE TRIANGLE NUMBER ###
########################################



class DivTriNum():

    def __init__(self, nth):
        self.nth = nth
        self.divisors = 0

    def triangle_number(self):
        x = self.nth
        for i in range(1, x):
            x = i + x
        return x



divisors = 0

while divisors < 5:
    for i in range(1, 1000):
        num = DivTriNum(i)
        tri = num.triangle_number()

        for i in range(1, tri):
            if tri % i == 0:
                divisors += 1



        

